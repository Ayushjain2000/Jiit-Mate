[{"B:\\Downloads\\Jiit Mate Project\\src\\index.js":"1","B:\\Downloads\\Jiit Mate Project\\src\\app\\store.js":"2","B:\\Downloads\\Jiit Mate Project\\src\\serviceWorker.js":"3","B:\\Downloads\\Jiit Mate Project\\src\\App.js":"4","B:\\Downloads\\Jiit Mate Project\\src\\firebase.js":"5","B:\\Downloads\\Jiit Mate Project\\src\\features\\userSlice.js":"6","B:\\Downloads\\Jiit Mate Project\\src\\features\\questionSlice.js":"7","B:\\Downloads\\Jiit Mate Project\\src\\components\\mate.js":"8","B:\\Downloads\\Jiit Mate Project\\src\\components\\auth\\Login.js":"9","B:\\Downloads\\Jiit Mate Project\\src\\components\\Widget.js":"10","B:\\Downloads\\Jiit Mate Project\\src\\components\\Sidebar.js":"11","B:\\Downloads\\Jiit Mate Project\\src\\components\\Header.js":"12","B:\\Downloads\\Jiit Mate Project\\src\\components\\WidgetContent.js":"13","B:\\Downloads\\Jiit Mate Project\\src\\components\\QuesBox.js":"14","B:\\Downloads\\Jiit Mate Project\\src\\components\\Post.js":"15","B:\\Downloads\\Jiit Mate Project\\src\\components\\SidebarOptions.js":"16","B:\\Downloads\\Jiit Mate Project\\src\\components\\mFeed.js":"17","B:\\Downloads\\Jiit Mate Project\\src\\components\\pages\\profile\\Profile.js":"18","B:\\Downloads\\Jiit Mate Project\\src\\components\\rightbar\\Rightbar.js":"19","B:\\Downloads\\Jiit Mate Project\\src\\components\\topbar\\Topbar.js":"20","B:\\Downloads\\Jiit Mate Project\\src\\components\\dummyData.js":"21","B:\\Downloads\\Jiit Mate Project\\src\\components\\online\\Online.js":"22","B:\\Downloads\\Jiit Mate Project\\src\\components\\closeFriend\\CloseFriend.js":"23","B:\\Downloads\\Jiit Mate Project\\src\\components\\share\\Share.js":"24","B:\\Downloads\\Jiit Mate Project\\src\\components\\post\\Post.js":"25","B:\\Downloads\\Jiit Mate Project\\src\\components\\feed\\Feed.js":"26","B:\\Downloads\\Jiit Mate Project\\src\\components\\post\\post.js":"27","B:\\Downloads\\Jiit Mate Project\\src\\components\\leftbar\\leftbar.js":"28"},{"size":716,"mtime":1638028035948,"results":"29","hashOfConfig":"30"},{"size":266,"mtime":1611939480000,"results":"31","hashOfConfig":"30"},{"size":5004,"mtime":1611939480000,"results":"32","hashOfConfig":"30"},{"size":1139,"mtime":1638028348258,"results":"33","hashOfConfig":"30"},{"size":673,"mtime":1637691425122,"results":"34","hashOfConfig":"30"},{"size":440,"mtime":1611939480000,"results":"35","hashOfConfig":"30"},{"size":604,"mtime":1611939480000,"results":"36","hashOfConfig":"30"},{"size":402,"mtime":1638026916585,"results":"37","hashOfConfig":"30"},{"size":4451,"mtime":1635080346000,"results":"38","hashOfConfig":"30"},{"size":364,"mtime":1611939480000,"results":"39","hashOfConfig":"30"},{"size":229,"mtime":1611939480000,"results":"40","hashOfConfig":"30"},{"size":5441,"mtime":1638028734594,"results":"41","hashOfConfig":"30"},{"size":2353,"mtime":1611939480000,"results":"42","hashOfConfig":"30"},{"size":855,"mtime":1635101423508,"results":"43","hashOfConfig":"30"},{"size":6020,"mtime":1638025289142,"results":"44","hashOfConfig":"30"},{"size":2565,"mtime":1638027295736,"results":"45","hashOfConfig":"30"},{"size":874,"mtime":1638026947201,"results":"46","hashOfConfig":"30"},{"size":1134,"mtime":1638074884227,"results":"47","hashOfConfig":"30"},{"size":3455,"mtime":1638025452863,"results":"48","hashOfConfig":"30"},{"size":1323,"mtime":1638025471119,"results":"49","hashOfConfig":"30"},{"size":2415,"mtime":1638026150148,"results":"50","hashOfConfig":"30"},{"size":387,"mtime":1638025408638,"results":"51","hashOfConfig":"30"},{"size":279,"mtime":1638025374751,"results":"52","hashOfConfig":"30"},{"size":1541,"mtime":1638025459690,"results":"53","hashOfConfig":"30"},{"size":1713,"mtime":1638025445928,"results":"54","hashOfConfig":"30"},{"size":365,"mtime":1638073804655,"results":"55","hashOfConfig":"30"},{"size":1713,"mtime":1638025445928,"results":"56","hashOfConfig":"30"},{"size":2276,"mtime":1638075392230,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"7duror",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"B:\\Downloads\\Jiit Mate Project\\src\\index.js",[],["120","121"],"B:\\Downloads\\Jiit Mate Project\\src\\app\\store.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\serviceWorker.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\App.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\firebase.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\features\\userSlice.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\features\\questionSlice.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\mate.js",["122"],"import React from \"react\";\nimport MFeed from \"./mFeed.js\";\nimport Header from \"./Header\";\nimport \"./mate.css\";\nimport Sidebar from \"./Sidebar\";\nimport Widget from \"./Widget.js\";\n\nfunction Mate() {\n  return (\n    <div className=\"mate\">\n      <Header />\n      <div className=\"content\">\n        <Sidebar />\n        <MFeed />\n        {/* <Widget /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Mate;\n","B:\\Downloads\\Jiit Mate Project\\src\\components\\auth\\Login.js",["123"],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport { auth, provider } from \"../../firebase\";\n\n//MAIN COMPONENT FUNCTION.\nfunction Login() {\n\n  //STATE VARIABLES\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const signIn = () => {\n    auth.signInWithPopup(provider).catch((e) => {\n      alert(e.message);\n    });\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((auth) => {\n        console.log(auth);\n      })\n      .catch((e) => alert(e.message));\n  };\n\n  const registerSignIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((auth) => {\n        if (auth) {\n          console.log(auth);\n        }\n      })\n      .catch((e) => alert(e.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <div className=\"login__logo\">\n          JIIT Mate\n          {/* <img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Quora_logo_2015.svg/250px-Quora_logo_2015.svg.png\"\n            alt=\"\"\n          /> */}\n        </div> \n        <div className=\"login__desc\">\n          {/* /* <p>A Place to Share knowledge and better understand the world</p>\n          <p style={{ color: \"royalblue\", fontSize: \"25px\" }}>\n            HandCrafted with ❤️ by{\" \"}\n          </p> */}\n           <h3>Ask-Learn-Connect</h3>  \n        </div>\n        <div className=\"login__auth\">\n          <div className=\"login__authOptions\">\n            <div className=\"login__authOption\">\n              <img\n                className=\"login__googleAuth\"\n                src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\n                alt=\"\"\n              />\n              <p onClick={signIn}>Continue With Google</p>\n            </div>\n            <div className=\"login__authOption\">\n              <img\n                className=\"login__googleAuth\"\n                src=\"https://1000logos.net/wp-content/uploads/2016/11/Facebook-logo-500x350.png\"\n                alt=\"\"\n              />\n              <span>Continue With Facebook</span>\n            </div>\n            <div className=\"login__authDesc\">\n              <p>\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n                  Sign Up With Email\n                </span>\n                . By continuing you indicate that you have read and agree to\n                Quora's\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n                  Terms of Service{\" \"}\n                </span>\n                and{\" \"}\n                <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n                  Privacy Policy\n                </span>\n                .\n              </p>\n            </div>\n          </div>\n          <div className=\"login__emailPass\">\n            <div className=\"login__label\">\n              <h4>Login</h4>\n            </div>\n            <div className=\"login__inputFields\">\n              <div className=\"login__inputField\">\n                <input\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Email\"\n                />\n              </div>\n              <div className=\"login__inputField\">\n                <input\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n            <div className=\"login__forgButt\">\n              <small>Forgot Password?</small>\n              <button onClick={handleSignIn}>Login</button>\n            </div>\n            <button onClick={registerSignIn}>Register</button>\n          </div>\n        </div>\n        {/* <div className=\"login__lang\">\n          <p>हिन्दी</p>\n          <ArrowForwardIosIcon fontSize=\"small\" />\n        </div> */}\n        {/* <div className=\"login__footer\">\n          <p>About</p>\n          <p>Languages</p>\n          <p>Careers</p>\n          <p>Businesses</p>\n          <p>Privacy</p>\n          <p>Terms</p>\n          <p>Contact</p>\n          <p>&copy; Quora Fake Inc. 2021</p>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","B:\\Downloads\\Jiit Mate Project\\src\\components\\Widget.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\Sidebar.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\Header.js",["124","125","126","127"],"import React, { useState } from \"react\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FeaturedPlayListOutlinedIcon from \"@material-ui/icons/FeaturedPlayListOutlined\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Modal from \"react-modal\";\nimport \"./Header.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db, { auth } from \"../firebase\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport firebase from \"firebase\";\nimport Profile from \"./pages/profile/Profile\";\nimport { Link } from 'react-router-dom';\n\nModal.setAppElement(\"#root\");\n\nfunction Header() {\n  const user = useSelector(selectUser);\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const questionName = input;\n\n  const handleQuestion = (e) => {\n    e.preventDefault();\n    setIsModalOpen(false);\n\n    if (questionName) {\n      db.collection(\"questions\").add({\n        user: user,\n        question: input,\n        imageUrl: inputUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  return (\n    <div className=\"Header\">\n      <div className=\"Header__logo\">\n        JIIT Mate\n      </div>\n      <div className=\"Header__icons\">\n        <div className=\"active Header__icon\">\n          <HomeIcon />\n        </div>\n        <div className=\"Header__icon\">\n          <FeaturedPlayListOutlinedIcon />\n        </div>\n        {/* <div className=\"Header__icon\">\n          <AssignmentTurnedInOutlinedIcon />\n        </div> */}\n        {/* <div className=\"Header__icon\">\n          <PeopleAltOutlinedIcon />\n        </div> */}\n        <div className=\"Header__icon\">\n          <NotificationsOutlinedIcon />\n        </div>\n      </div>\n      {/* <div className=\"Header__input\">\n        <SearchIcon />\n        <input type=\"text\" placeholder=\"Search\" />\n      </div> */}\n      <div className=\"Header__Rem\">\n        \n        {/* <LanguageIcon /> */}\n        <Button onClick={() => setIsModalOpen(true)}>Add Question</Button>\n        <Modal\n          isOpen={IsmodalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          shouldCloseOnOverlayClick={false}\n          style={{\n            overlay: {\n              width: 700,\n              height: 600,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-300px\",\n              marginLeft: \"-350px\",\n            },\n          }}\n        >\n          <div className=\"modal__title\">\n            <h5>Add Question</h5>\n            <h5>Share Link</h5>\n          </div>\n          <div className=\"modal__info\">\n            <Avatar\n              className=\"avatar\"\n              src={\n                user.photo\n                  ? user.photo\n                  : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n              }\n            />\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\n            <div className=\"modal__scope\">\n              <PeopleAltOutlinedIcon />\n              <p>Public</p>\n              <ExpandMore />\n            </div>\n          </div>\n          <div className=\"modal__Field\">\n            <Input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\n            />\n            <div className=\"modal__fieldLink\">\n              <Link />\n              <input\n                value={inputUrl}\n                onChange={(e) => setInputUrl(e.target.value)}\n                type=\"text\"\n                placeholder=\"Optional: inclue a link that gives context\"\n              ></input>\n            </div>\n          </div>\n          <div className=\"modal__buttons\">\n            <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n              Cancel\n            </button>\n            <button type=\"sumbit\" onClick={handleQuestion} className=\"add\">\n              Add Question\n            </button>\n          </div>\n        </Modal>\n        <div className=\"logout\" onClick={() => auth.signOut()}>\n            <h5>Log Out</h5>\n          </div>\n        <div className=\"Header__avatar\" >\n      {/* <a href=\"https://console.firebase.google.com/u/0/project/jiit-mate-c9998/firestore/data/~2Fquestions~2F2gw13lWg0kSS480n6CoS\">*/}\n            <Link to='/profile'>\n            <Avatar \n            className=\"Avatar\"\n            src={\n              user.photo\n                ? user.photo\n                : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n            }\n          /></Link>\n          {/* </a> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","B:\\Downloads\\Jiit Mate Project\\src\\components\\WidgetContent.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\QuesBox.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\Post.js",["128"],"import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\n\nfunction Post({ Id, question, imageUrl, timestamp, users }) {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\")\n        .doc(questionId)\n        .collection(\"answer\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setGetAnswers(\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n          )\n        );\n    }\n  }, [questionId]);\n\n  const handleAnswer = (e) => {\n    e.preventDefault();\n\n    if (questionId) {\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n        user: user,\n        answer: answer,\n        questionId: questionId,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    console.log(questionId);\n    setAnswer(\"\");\n    setIsModalOpen(false);\n  };\n  return (\n    <div\n      className=\"post\"\n      onClick={() =>\n        dispatch(\n          setQuestionInfo({\n            questionId: Id,\n            questionName: question,\n          })\n        )\n      }\n    >\n      <div className=\"post__info\">\n        <Avatar\n          src={\n            users.photo\n              ? users.photo\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\n          }\n        />\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post__question\">\n          <p>{question}</p>\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"post__btnAnswer\"\n          >\n            Answer\n          </button>\n          <Modal\n            isOpen={IsmodalOpen}\n            onRequestClose={() => setIsModalOpen(false)}\n            shouldCloseOnOverlayClick={false}\n            style={{\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\",\n              },\n            }}\n          >\n            <div className=\"modal__question\">\n              <h1>{question}</h1>\n              <p>\n                asked by{\" \"}\n                <span className=\"name\">\n                  {users.displayName ? users.displayName : users.email}\n                </span>{\" \"}\n                {\"\"}\n                on{\" \"}\n                <span className=\"name\">\n                  {new Date(timestamp?.toDate()).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal__answer\">\n              <textarea\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Enter Your Answer\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"modal__button\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                Add Answer\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <div className=\"post__answer\">\n          {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n        </div>\n        <img src={imageUrl} alt=\"\" />\n      </div>\n      <div className=\"post__footer\">\n        <div className=\"post__footerAction\">\n          <ArrowUpwardOutlinedIcon />\n          <ArrowDownwardOutlinedIcon />\n        </div>\n\n        {/* <RepeatOutlinedIcon /> */}\n        <ChatBubbleOutlineOutlinedIcon />\n        <div className=\"post__footerLeft\">\n          <ShareOutlined />\n          <MoreHorizOutlined />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","B:\\Downloads\\Jiit Mate Project\\src\\components\\SidebarOptions.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\mFeed.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\pages\\profile\\Profile.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\rightbar\\Rightbar.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\topbar\\Topbar.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\dummyData.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\online\\Online.js",[],["129","130"],"B:\\Downloads\\Jiit Mate Project\\src\\components\\closeFriend\\CloseFriend.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\share\\Share.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\post\\Post.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\feed\\Feed.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\post\\post.js",[],"B:\\Downloads\\Jiit Mate Project\\src\\components\\leftbar\\leftbar.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":14},{"ruleId":"135","severity":1,"message":"139","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"140","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":38},{"ruleId":"135","severity":1,"message":"141","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":18},{"ruleId":"135","severity":1,"message":"142","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":20},{"ruleId":"135","severity":1,"message":"143","line":17,"column":8,"nodeType":"137","messageId":"138","endLine":17,"endColumn":15},{"ruleId":"135","severity":1,"message":"144","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":26},{"ruleId":"131","replacedBy":"145"},{"ruleId":"133","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Widget' is defined but never used.","Identifier","unusedVar","'ArrowForwardIosIcon' is defined but never used.","'AssignmentTurnedInOutlinedIcon' is defined but never used.","'SearchIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'Profile' is defined but never used.","'RepeatOutlinedIcon' is defined but never used.",["147"],["148"],"no-global-assign","no-unsafe-negation"]